#!/usr/bin/env ruby

usage =<<EOF

  #{$0} input.vcf sample_number [stdout]
 -----------------------------------------
  only report #_of_homozygot_snps > cutoff

  format out:

  location  start end #_of_homozygot_snps
  ...
  chr1  0 500000 50
  chr1  1 500001 50
  chr1  2 500002 51
  ...
EOF

if ARGV.length != 2
  puts usage
  exit
end

# _ Functions _

# _ Functions end _


input = ARGV[0]
name = input.split(/\W/)[-2]
sample_number = ARGV[1].to_i()
window_length = 5000

input_handle = File.open(input)
line = input_handle.readline()
while line =~ /^#/
  line = input_handle.readline()
end
k = []
i = 0

while i < window_length
  info = line.split("\t")[sample_number]
  if info != "./."
    info = info.split(":")
    all_reads = info[1].split(",")[1].to_f + info[1].split(",")[0].to_f
    mutated_reads = info[1].split(",")[1].to_f
    frequency = mutated_reads/all_reads.to_f
    if frequency > 0.5 && info[2].to_i > 10 && info[3].to_i > 40
      k << frequency
      i += 1
    end
  end

  line = input_handle.readline()
end


last_position = line.split("\t")[1]
dummy = true
i = 1
number = 0
while !input_handle.eof?()

  info = line.split("\t")[sample_number]
  if info != "./."
    info = info.split(":")
    all_reads = info[1].split(",")[1].to_f + info[1].split(",")[0].to_f
    mutated_reads = info[1].split(",")[1].to_f
    frequency = mutated_reads/all_reads.to_f
    if frequency > 0.5 && info[2].to_i > 10 && info[3].to_i > 40

      #STDERR.puts frequency
      z = k.sort()
      #puts k.length/2
      position = line.split("\t")[1]
      if number == 2
        puts "#{last_position}\t#{z[z.length/2]}"
        number = 0
      else
        number += 1
      end
      last_position = position
      i += 1
      dummy = false
      k.delete_at(0)
      k << frequency
      #dummy = true
    end
  end


  line = input_handle.readline()


end

